spring.application.name: ipservicedemo
spring.sleuth.sampler.percentage: 1.0
# application properties
spring:
  datasource:
    name: testdb
    url: jdbc:mysql://172.16.5.23:3306/vp_common_config?useUnicode=true&characterEncoding=utf-8
#    username: root
    username: ipservicedemo
#    password: mQO7NpV1ohNjA37/xSIsNCIlVY4woR+zuAyeD3dBPpwcUX75gsZbvJftqhtpESDvItn6MUlJwrAAsi5+65fySQ==
    password: vpclub.dev
    # using druid data source
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    maxActive: 20
    initialSize: 1
    maxWait: 28800
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
    # encrypt password
    filters: config,stat,wall,log4j
    connectionProperties: "config.decrypt=false;druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000"
    useGlobalDataSourceStat: true
    maxPoolPreparedStatementPerConnectionSize: 20
  data:
    mongodb:
      host: 172.16.45.3
      port: 27017

  http:
    encoding.charset: UTF-8
    encoding.enable: true
    encoding.force: true

  cache:
    type:  hazelcast

mybatis:
  config-location : "classpath:mybatis-config.xml"
  #checkConfig-location : false
  mapper-locations : "classpath:mapper/*Mapper.xml"

hazelcast:
  enabled: true
  cluster: true
  servers:
    -  hazelcast.hazelcast-cluster.svc.cluster.local:5701
#kafka
kafka:
  broker: kafka.kafka.svc.cluster.local:9092
  topic: topic1
  group: si.group
  partions: 6
  timeout: 15000

ipservice.message: 'heheda,spring cloud kubernetes from here !! 1110'
# LOGGING
logging:
  level:
    tk.mybatis: DEBUG
#druid:
#  allow: ""
#  deny: "172.16.0.122"
#  loginUsername: vpclub
#  loginPassword: vpclub.pub
cors:
  mappings: /**
  allowedOrigins:
